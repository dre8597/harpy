plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')

project.logger.info("keystoreProperties are: ${keystorePropertiesFile.exists()}, ${keystoreProperties}")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.robertodoering.harpy"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.robertodoering.harpy.free"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
          release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            shrinkResources true
            ndk {
                debugSymbolLevel "FULL"
                //https://docs.flutter.dev/development/add-to-app/android/project-setup
                // Filter for architectures supported by Flutter.
                //noinspection ChromeOsAbiSupport - flutter doesn't support x86
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
            }
        }
        debug {
            signingConfig = signingConfigs.debug
        }
    }

    // Add product flavors here
    flavorDimensions "flavor-type"
    productFlavors {
        free {
            dimension "flavor-type"
            applicationId "com.robertodoering.harpy.free"
            // Add any other free-specific configurations here
        }
        pro {
            dimension "flavor-type"
            applicationId "com.robertodoering.harpy.pro"
            // Add any other pro-specific configurations here
        }
    }
}

flutter {
    source = "../.."
}
